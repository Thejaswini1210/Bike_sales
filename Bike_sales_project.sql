SELECT * FROM Transactions;

---HOW MANY CUSTOMERS OWNS A CAR----
SELECT COUNT(*) AS CAR_OWNER,OWNS_CAR FROM customer_details
GROUP BY owns_car;



----ONLINE ORDERS---

select count(transaction_id) AS ORDER_TYPE,online_order from Transactions
group by online_order;
--Where 0 is offile and 1 is online--



---	TOTAL TRANSACTIONS PER PRODUCT SIZE---

SELECT COUNT(TRANSACTION_ID) AS TOTAL_TRANSACTIONS,PRODUCT_SIZE FROM Transactions
GROUP BY product_size
ORDER BY TOTAL_TRANSACTIONS DESC;




----total transactions made each month---

SELECT COUNT(TRANSACTION_ID) AS TOTAL_TRANSACTIONS,
TRANSACTION_MONTH FROM TRANSACTIONS
GROUP BY TRANSACTION_MONTH
ORDER BY TOTAL_TRANSACTIONS DESC;




---TOP 10 CUSTOMERS WITH HIGHEST PURCHASE---

SELECT TOP 10 customer_details.FIRST_NAME,Sum(Transactions.list_price) AS TOTAL_SPENDING
FROM customer_details INNER JOIN Transactions 
ON customer_details.customer_id=transactions.customer_id
GROUP BY customer_details.first_name;



-----WHICH GENDER CONTRIBUTES MORE SALES----

select customer_details.gender,sum(cast(transactions.list_price as int)) as sales_by_gender
FROM customer_details INNER JOIN Transactions 
ON customer_details.customer_id=transactions.customer_id
group by gender;



---- what product line brings in more sales---

select product_line,sum(cast(list_price as int)) as total_sales 
from Transactions
where order_status = 'approved'
group by product_line
order by total_sales desc




----cycle brand preferred by state-----

select distinct transactions.brand,SUM(CAST(transactionS.LIST_PRICE AS int)) AS TOTAL_SALES,customer_address.state from Transactions inner join 
customer_address on Transactions.customer_id=customer_address.customer_id
group by brand,state
ORDER BY 2 DESC;



-----MOST AND LEAST SELLING BRAND by PRODUCT LINE--------

SELECT brand, product_line, list_price as selling_price,
count(*) over (partition by brand, product_line)
as occurence_of_product
from transactions
order by occurence_of_product desc;



----profit generated by each job industry and wealth segment using CTE-----
with sales as(
select sum(list_price - standard_cost) as profit,
customer_details.job_industry_category,wealth_segment
from transactions join customer_details on
transactions.customer_id=customer_details.customer_id
group by job_industry_category,wealth_segment
)

select profit,job_industry_category,wealth_segment from sales
order by profit desc;









